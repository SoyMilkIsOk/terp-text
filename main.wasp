app TerpText {
  wasp: {
    version: "^0.11.4"
  },
  title: "TerpText",
  dependencies: [
    ("react-icons", "5.0.1"),
    ("@chakra-ui/react", "2.8.0"),
    ("react-modal", "3.16.1")
  ],
  client: {
    rootComponent: import { App } from "@client/App.jsx"
  },
  db: {
    system: PostgreSQL,
  },
  auth: {
    userEntity: User,
    methods: {
      usernameAndPassword: {}
    },
    onAuthFailedRedirectTo: "/login",
    onAuthSucceededRedirectTo: "/"
  }
}

/////// AUTH ///////

route LoginRoute { path: "/login", to: LoginPage }
page LoginPage {
  component: import Login from "@client/pages/auth/Login.jsx"
}
route SignupRoute { path: "/signup", to: SignupPage }
page SignupPage {
  component: import Signup from "@client/pages/auth/Signup.jsx"
}

/////// ENTITIES ///////

entity User {=psl
    id           Int          @id @default(autoincrement())
    username     String      @unique @default(cuid())
    phone        String       @unique @default("000-000-0000")
    password     String
    strains      UserStrain[]
psl=}

entity Dispensary {=psl
    id      Int      @id @default(autoincrement())
    name    String   @unique
    strains DispensaryStrain[]
    userStrains UserStrain[]
psl=}

entity Strain {=psl
    id           Int          @id @default(autoincrement())
    name         String @unique
    users        UserStrain[]
    dispensaries DispensaryStrain[]
    grower       String @default("grower")
psl=}

entity UserStrain {=psl
    id       Int    @default(autoincrement())
    user     User   @relation(fields: [userId], references: [id])
    userId   Int
    strain   Strain @relation(fields: [strainId], references: [id])
    strainId Int
    dispensary Dispensary @relation(fields: [dispensaryName], references: [name])
    dispensaryName String
    // unique compound index on userId, strainId, dispensaryName
    @@id([userId, strainId, dispensaryName])
psl=}

entity DispensaryStrain {=psl
    id             Int          @id @default(autoincrement())
    dispensary     Dispensary   @relation(fields: [dispensaryName], references: [name])
    dispensaryName String @default("dispensary name")
    strain         Strain       @relation(fields: [strainName], references: [name])
    strainName     String @default("strain name")
    available      Boolean      @default(false)
    availableDate  DateTime     @default(now())
psl=}

/////// ACTIONS ///////

action enrollUser {
  fn: import { enrollUser } from "@server/actions.js",
  entities: [UserStrain, User]
}

action addStrain {
  fn: import { addStrain } from "@server/actions.js",
  entities: [Strain, DispensaryStrain, Dispensary]
}

action deleteStrain {
  fn: import { deleteStrain } from "@server/actions.js",
  entities: [Strain, DispensaryStrain, Dispensary]
}

action updateStrainAvailability {
  fn: import { updateStrainAvailability } from "@server/actions.js",
  entities: [Dispensary, DispensaryStrain]
}

/////// QUERIES ///////

query getDispensary {
  fn: import { getDispensary } from "@server/queries.js",
  entities: [Dispensary]
}

query getStrains {
  fn: import { getStrains } from "@server/queries.js",
  entities: [Strain, Dispensary, DispensaryStrain]
}

query getUser {
  fn: import { getUser } from "@server/queries.js",
  entities: [User, UserStrain]
}

query getAllDispensaries {
  fn: import { getAllDispensaries } from "@server/queries.js",
  entities: [Dispensary]
}

/////// ROUTES ///////

route HomeRoute { path: "/", to: HomePage }

page HomePage {
  component: import { Home } from "@client/pages/Home.jsx",
  authRequired: false
}

route DispensaryRoute { path: "/:dispensaryName", to: DispensaryPage }

page DispensaryPage {
  component: import { DispensaryPage } from "@client/pages/Dispensary.jsx",
  authRequired: false
}

route DispensaryDashboardRoute { path: "/:dispensaryName/dashboard", to: DispensaryDashboardPage }  

page DispensaryDashboardPage {
  component: import { DispensaryDashboard } from "@client/pages/DispensaryDashboard.jsx",
  authRequired: true
}

route UserProfileRoute { path: "/:userName/profile", to: UserProfilePage }

page UserProfilePage {
  component: import { UserProfile } from "@client/pages/UserProfile.jsx",
  authRequired: true
}