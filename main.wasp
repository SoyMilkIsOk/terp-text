app TerpText {
  wasp: {
    version: "^0.11.4"
  },
  title: "Terp-Text",
  client: {
    rootComponent: import { Layout } from "@client/Layout.jsx"
  },
  db: {
    system: PostgreSQL,
  },
  auth: {
    userEntity: User,
    methods: {
      usernameAndPassword: {}
    },
    onAuthFailedRedirectTo: "/login",
    onAuthSucceededRedirectTo: "/"
  }
}

route LoginRoute { path: "/login", to: LoginPage }
page LoginPage {
  component: import Login from "@client/pages/auth/Login.jsx"
}
route SignupRoute { path: "/signup", to: SignupPage }
page SignupPage {
  component: import Signup from "@client/pages/auth/Signup.jsx"
}

entity User {=psl
    id           Int          @id @default(autoincrement())
    username     String      @unique @default(cuid())
    phone        String       @unique @default("000-000-0000")
    password     String
    strains      UserStrain[]
    dispensaries DispensaryUser[]
psl=}

entity Dispensary {=psl
    id      Int      @id @default(autoincrement())
    name    String   @unique
    strains DispensaryStrain[]
    users   DispensaryUser[]
psl=}

entity Strain {=psl
    id           Int          @id @default(autoincrement())
    name         String @unique
    users        UserStrain[]
    dispensaries DispensaryStrain[]
psl=}

entity UserStrain {=psl
    id       Int    @id @default(autoincrement())
    user     User   @relation(fields: [userId], references: [id])
    userId   Int
    strain   Strain @relation(fields: [strainId], references: [id])
    strainId Int
psl=}

entity DispensaryStrain {=psl
    id             Int          @id @default(autoincrement())
    dispensary     Dispensary   @relation(fields: [dispensaryName], references: [name])
    dispensaryName String @default("dispensary name")
    strain         Strain       @relation(fields: [strainName], references: [name])
    strainName     String @default("strain name")
    available      Boolean      @default(false)
psl=}

entity DispensaryUser {=psl
    id             Int          @id @default(autoincrement())
    dispensary     Dispensary   @relation(fields: [dispensaryName], references: [name])
    dispensaryName String @default("dispensary name")
    user           User         @relation(fields: [userId], references: [id])
    userId         Int
psl=}

action enrollUser {
  fn: import { enrollUser } from "@server/actions.js",
  entities: [UserStrain]
}

action sendNotification {
  fn: import { sendNotification } from "@server/actions.js",
  entities: [User, Dispensary, Strain]
}

query getDispensary {
  fn: import { getDispensary } from "@server/queries.js",
  entities: [Dispensary]
}

query getStrains {
  fn: import { getStrains } from "@server/queries.js",
  entities: [Strain]
}

query getUser {
  fn: import { getUser } from "@server/queries.js",
  entities: [User]
}

route DispensaryRoute { path: "/:dispensaryName", to: DispensaryPage }
page DispensaryPage {
  component: import { DispensaryPage } from "@client/pages/Dispensary.jsx",
  authRequired: false
}